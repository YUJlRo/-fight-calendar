name: Release debug APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name to create release (e.g. v0.9.0-beta3)'
        required: true
        default: 'v0.9.0-beta3'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'

      - name: Detect Android project root
        shell: bash
        run: |
          if [ -f "android/settings.gradle" ] || [ -f "android/settings.gradle.kts" ]; then
            echo "BUILD_ROOT=android" >> $GITHUB_ENV
          elif [ -f "アンドロイド/settings.gradle" ] || [ -f "アンドロイド/settings.gradle.kts" ]; then
            echo "BUILD_ROOT=アンドロイド" >> $GITHUB_ENV
          elif [ -f "settings.gradle" ] || [ -f "settings.gradle.kts" ]; then
            echo "BUILD_ROOT=." >> $GITHUB_ENV
          else
            echo "::error::Androidのsettings.gradle(.kts)が見つかりません。android/ または アンドロイド/ にプロジェクトを配置してください。"
            exit 1
          fi
          echo "Using BUILD_ROOT=$BUILD_ROOT"

      - name: Ensure local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > "$BUILD_ROOT/local.properties"

      # Gradle WrapperがなくてもOK。指定バージョンでビルド
      - name: Build debug APK
        uses: gradle/gradle-build-action@v3
        with:
          arguments: assembleDebug
          gradle-version: 8.7
          build-root-directory: ${{ env.BUILD_ROOT }}

      - name: Collect APK and SHA-256
        shell: bash
        run: |
          APK=$(find "$BUILD_ROOT" -path "*/outputs/apk/debug/*.apk" -name "*.apk" | head -n 1)
          if [ -z "$APK" ]; then
            echo "::error::Debug APKが見つかりません。モジュール名がapp以外の場合はassembleDebugが失敗している可能性があります。"
            exit 1
          fi
          echo "Found APK: $APK"
          mkdir -p artifacts
          cp "$APK" artifacts/app-debug.apk
          sha256sum artifacts/app-debug.apk | tee artifacts/SHA256.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
          name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
          prerelease: true
          files: |
            artifacts/app-debug.apk
            artifacts/SHA256.txt
